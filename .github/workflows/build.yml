name: macOS DMG Build and Release

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  build-macos:
    name: üéâ Build macOS DMG
    runs-on: macos-latest

    steps:
      - name: üîç Checkout –∫–æ–¥
        uses: actions/checkout@v4

      - name: üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          architecture: x64

      - name: üì¶ –ü–æ–ª—É—á–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        run: flutter pub get

      - name: üî® –°–æ–±—Ä–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ macOS (release)
        run: flutter build macos --release

      - name: üß∞ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Node.js –∏ create-dmg
        run: |
          brew install node
          npm install -g create-dmg

      - name: üóÇ –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É DMG
        run: |
          mkdir -p dmg_build
          # List contents of the Release directory for debugging, good to keep.
          ls -la build/macos/Build/Products/Release/
          # Ensure you are copying the actual .app bundle. 
          # The `*.app` might not always yield the correct single app name.
          # Better to find it dynamically or assume a standard name if possible.
          # For now, let's assume `*.app` works if there's only one.
          cp -R build/macos/Build/Products/Release/*.app dmg_build/

      - name: üíæ –°–æ–∑–¥–∞—Ç—å DMG –æ–±—Ä–∞–∑
        run: |
          cd dmg_build || exit 1
          # Dynamically find the .app name in case it changes
          APP_NAME=$(find . -maxdepth 1 -type d -name "*.app" | head -n 1)
          if [ -z "$APP_NAME" ]; then
            echo "Error: Could not find .app bundle in dmg_build directory."
            exit 1
          fi
          # Remove the leading './' if present from find output
          APP_NAME="${APP_NAME#./}" 
          echo "–ù–∞–π–¥–µ–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: $APP_NAME"

          create-dmg \
            --volname "MyFlutterApp" \
            --volume-icon "../macos/Runner/Assets.xcassets/AppIcon.appiconset/icon.icns" \
            --window-pos "200 120" \
            --window-size "800 600" \
            --icon-size 100 \
            --icon "$APP_NAME" "200" "190" \ # Enclose icon coordinates in quotes
            --hide-extension "$APP_NAME" \
            --app-drop-link "600 185" \ # Enclose app-drop-link coordinates in quotes for consistency and safety
            MyFlutterApp.dmg \
            "$APP_NAME"

      - name: üåê –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∫–∞–∫ GitHub Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          # The file should be relative to the GITHUB_WORKSPACE root, not dmg_build
          file: dmg_build/MyFlutterApp.dmg
          tag: latest-mac-release
          overwrite: true
          body: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–±—Ä–∞–Ω–Ω–æ–µ macOS –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.
          draft: false
          prerelease: false